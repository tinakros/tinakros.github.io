import{_ as p,o,c as e,d as s,e as n,b as t,a,r as c}from"./app.2e3e105a.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"react 学习日志","slug":"react-学习日志","link":"#react-学习日志","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"没有绑定在具体元素上 而是在根节点上  事件代理的模式","slug":"没有绑定在具体元素上-而是在根节点上-事件代理的模式","link":"#没有绑定在具体元素上-而是在根节点上-事件代理的模式","children":[]},{"level":3,"title":"React生命周期","slug":"react生命周期","link":"#react生命周期","children":[]},{"level":3,"title":"render-props和高阶组件","slug":"render-props和高阶组件","link":"#render-props和高阶组件","children":[]},{"level":3,"title":"setState","slug":"setstate","link":"#setstate","children":[]},{"level":3,"title":"JSX 语法的转化过程","slug":"jsx-语法的转化过程","link":"#jsx-语法的转化过程","children":[]},{"level":3,"title":"组件更新机制","slug":"组件更新机制","link":"#组件更新机制","children":[]},{"level":3,"title":"组件性能优化","slug":"组件性能优化","link":"#组件性能优化","children":[]},{"level":3,"title":"Hooks","slug":"hooks-1","link":"#hooks-1","children":[]},{"level":3,"title":"路由","slug":"路由","link":"#路由","children":[]},{"level":3,"title":"Flux & Redux","slug":"flux-redux","link":"#flux-redux","children":[]},{"level":3,"title":"Immutable","slug":"immutable","link":"#immutable","children":[]},{"level":3,"title":"Mobx","slug":"mobx","link":"#mobx","children":[]}]},{"level":2,"title":"类组件对应------->函数式组件","slug":"类组件对应-函数式组件","link":"#类组件对应-函数式组件","children":[{"level":3,"title":"redux-saga","slug":"redux-saga","link":"#redux-saga","children":[]},{"level":3,"title":"Portal","slug":"portal","link":"#portal","children":[]},{"level":3,"title":"React.lazy","slug":"react-lazy","link":"#react-lazy","children":[]},{"level":3,"title":"forwardRef","slug":"forwardref","link":"#forwardref","children":[]}]}],"relativePath":"frontend/react/r1.md","lastUpdated":1674562596000}'),r={name:"frontend/react/r1.md"},F=a("",42),D=s("p",{"pageSize:10":""},[n("children属性"),s("br"),n(" props校验 允许在创建组件的时候就指定props类型、格式 作用 捕获使用组件时 因为props导致的错误并给出提示 增加组件的健壮性 App.propTypes={color:PropTypes.array} 安装 "),s("code",null,"npm i props-types"),n(" 导入包 使用 组件名.propTypes={}来给组件的props添加校验规则 约束规则 常见的为array\\bool\\fuc\\number\\object \\string 必填项：isRequired 特定结构的对象：shape({}) React元素类型：element props的默认值 场景： 分页组件---> 每页显示条数 作用 给props设置默认值 在未传入props时生效 例如 App.defaultProps =")],-1),y=a("",21),C=a("",90),i=s("p",{从store中读取:""},"优化 ---> 在 search if(store.list.length===0) { 发请求获取数据 } else",-1),A=a("",40);function d(u,h,g,f,E,m){const l=c("MousePostion");return o(),e("div",null,[F,D,y,s("p",null,[n("// 创建组件 const MousePostion = withMouse(position) // 渲染组件 "),t(l)]),C,i,A])}const x=p(r,[["render",d]]);export{v as __pageData,x as default};
