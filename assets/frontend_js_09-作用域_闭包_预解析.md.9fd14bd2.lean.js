import{_ as a,o as l,c as p,a as n,d as s}from"./app.5b59c77e.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.作用域","slug":"_1-作用域","link":"#_1-作用域","children":[{"level":3,"title":"作用域链","slug":"作用域链","link":"#作用域链","children":[]}]},{"level":2,"title":"2.var let const","slug":"_2-var-let-const","link":"#_2-var-let-const","children":[{"level":3,"title":"let变量","slug":"let变量","link":"#let变量","children":[]},{"level":3,"title":"const 常量","slug":"const-常量","link":"#const-常量","children":[]}]},{"level":2,"title":"3.预解析","slug":"_3-预解析","link":"#_3-预解析","children":[{"level":3,"title":"定义过程","slug":"定义过程","link":"#定义过程","children":[]},{"level":3,"title":"执行过程","slug":"执行过程","link":"#执行过程","children":[]},{"level":3,"title":"变量/函数 重复定义","slug":"变量-函数-重复定义","link":"#变量-函数-重复定义","children":[]},{"level":3,"title":"小练习","slug":"小练习","link":"#小练习","children":[]}]},{"level":2,"title":"4.垃圾回收机制","slug":"_4-垃圾回收机制","link":"#_4-垃圾回收机制","children":[{"level":3,"title":"垃圾回收的两种实现方式","slug":"垃圾回收的两种实现方式","link":"#垃圾回收的两种实现方式","children":[]}]},{"level":2,"title":"5.闭包","slug":"_5-闭包","link":"#_5-闭包","children":[{"level":3,"title":"什么是闭包","slug":"什么是闭包","link":"#什么是闭包","children":[]},{"level":3,"title":"闭包用途1-记忆性","slug":"闭包用途1-记忆性","link":"#闭包用途1-记忆性","children":[]},{"level":3,"title":"闭包用途2–模拟私有变量","slug":"闭包用途2–模拟私有变量","link":"#闭包用途2–模拟私有变量","children":[]},{"level":3,"title":"使用闭包的注意点","slug":"使用闭包的注意点","link":"#使用闭包的注意点","children":[]}]},{"level":2,"title":"6.IIFE","slug":"_6-iife","link":"#_6-iife","children":[{"level":3,"title":"IIFE的作用","slug":"iife的作用","link":"#iife的作用","children":[]},{"level":3,"title":"let const的应用","slug":"let-const的应用","link":"#let-const的应用","children":[]}]}],"relativePath":"frontend/js/09-作用域,闭包,预解析.md","lastUpdated":1677482837000}'),o={name:"frontend/js/09-作用域,闭包,预解析.md"},e=n("",29),t=s("blockquote",null,[s("p",null,[s("strong",null,"let const 有块级作用域")]),s("p",{"css-module":"."},"通俗的讲就是一对花括号中的区域"),s("p",null,[s("strong",null,"{} for(){} while(){} do{}while() if(){} switch(){}")]),s("p",null,"块级作用域可以嵌套")],-1),c=n("",140),r=[e,t,c];function y(F,D,i,C,A,d){return l(),p("div",null,r)}const f=a(o,[["render",y]]);export{g as __pageData,f as default};
